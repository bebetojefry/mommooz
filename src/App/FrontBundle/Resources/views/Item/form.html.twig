{% form_theme form 'bootstrap_3_layout.html.twig' %}
<div class="row">
    <div class="col-md-6">
        {{ form_row(form.name) }}
        {{ form_row(form.description) }}
        {{ form_row(form.product) }}
        {{ form_row(form.brand) }}
        {{ form_row(form.keywords) }}
    </div>
    <div class="col-md-6">
        {{ form_row(form.price) }}
        {{ form_row(form.images) }}
        {{ form_row(form.offers) }}
        {{ form_row(form.comm_type) }}
        {{ form_row(form.comm_value) }}
        {{ form_row(form.status) }}
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        {{ form_label(form.variants) }}
        <ul class="variants" data-prototype="{{ form_widget(form.variants.vars.prototype)|e('html_attr') }}">
            {% for variant in form.variants %}
                <li>{{ form_widget(variant) }}</li>
            {% endfor %}
        </ul>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        {{ form_label(form.specifications) }}
        <ul class="specifications" data-prototype="{{ form_widget(form.specifications.vars.prototype)|e('html_attr') }}">
            {% for specification in form.specifications %}
                <li>{{ form_widget(specification) }}</li>
            {% endfor %}
        </ul>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        {{ form_row(form.submit) }}
    </div>
</div>
{{ form_widget(form._token) }}
<script type="text/javascript">
    $(document).ready(function () {
        $("#{{ form.keywords.vars.id }}").tokenInput("{{ path('keyword_search') }}", {
            theme: "facebook",
            allow_new: true
            {% if keyword_values is defined %},prePopulate: {{ keyword_values|raw }}{% endif %}
        });

        $('#{{ form.keywords.vars.id }}').addClass('token-input-real-field');
        
        $("#{{ form.images.vars.id }}").imageUploader();
    });
    
    
    var $collectionHolder;
    var $variantCollectionHolder;

    // setup an "add a specification" link
    var $addSpecificationLink = $('<a href="#" class="add_specification_link">Add a Specification</a>');
    var $newLinkLi = $('<li></li>').append($addSpecificationLink);
    
    // setup an "add a variant" link
    var $addVariantLink = $('<a href="#" class="add_variant_link">Add a Variant</a>');
    var $newLinkLi2 = $('<li></li>').append($addVariantLink);

    function addSpecificationForm($collectionHolder, $newLinkLi) {
        // Get the data-prototype explained earlier
        var prototype = $collectionHolder.data('prototype');

        // get the new index
        var index = $collectionHolder.data('index');

        // Replace '__name__' in the prototype's HTML to
        // instead be a number based on how many items we have
        var newForm = prototype.replace(/__name__/g, index);

        // increase the index with one for the next item
        $collectionHolder.data('index', index + 1);

        // Display the form in the page in an li, before the "Add a tag" link li
        var $newFormLi = $('<li></li>').append(newForm);
        $newLinkLi.before($newFormLi);
        
        // add a delete link to the new form
        addSpecificationFormDeleteLink($newFormLi);
        initTinyMCE();
    }
    
    function addVarientForm($variantCollectionHolder, $newLinkLi2) {
        // Get the data-prototype explained earlier
        var prototype = $variantCollectionHolder.data('prototype');

        // get the new index
        var index = $variantCollectionHolder.data('index');

        // Replace '__name__' in the prototype's HTML to
        // instead be a number based on how many items we have
        var newForm = prototype.replace(/__name__/g, index);

        // increase the index with one for the next item
        $variantCollectionHolder.data('index', index + 1);

        // Display the form in the page in an li, before the "Add a tag" link li
        var $newFormLi2 = $('<li></li>').append(newForm);
        $newLinkLi2.before($newFormLi2);
        
        // add a delete link to the new form
        addVariantFormDeleteLink($newFormLi2);
    }
    
    function addSpecificationFormDeleteLink($tagFormLi) {
        var $removeFormA = $('<a href="#">Delete this Specification</a>');
        $tagFormLi.append($removeFormA);
        initTinyMCE();
        $removeFormA.on('click', function(e) {
            // prevent the link from creating a "#" on the URL
            e.preventDefault();

            // remove the li for the tag form
            $tagFormLi.remove();
        });
    }
    
    function addVariantFormDeleteLink($tagFormLi) {
        var $removeFormA = $('<a href="#">Delete this Variant</a>');
        $tagFormLi.append($removeFormA);
        $removeFormA.on('click', function(e) {
            // prevent the link from creating a "#" on the URL
            e.preventDefault();

            // remove the li for the tag form
            $tagFormLi.remove();
        });
    }

    jQuery(document).ready(function() {
        // Get the ul that holds the collection of tags
        $collectionHolder = $('ul.specifications');
        $variantCollectionHolder = $('ul.variants');
        
        // add a delete link to all of the existing tag form li elements
        $collectionHolder.find('li').each(function() {
            addSpecificationFormDeleteLink($(this));
        });
        
        // add a delete link to all of the existing tag form li elements
        $variantCollectionHolder.find('li').each(function() {
            addVariantFormDeleteLink($(this));
        });
    
        // add the "add a tag" anchor and li to the tags ul
        $collectionHolder.append($newLinkLi);
        
        // add the "add a tag" anchor and li to the tags ul
        $variantCollectionHolder.append($newLinkLi2);

        // count the current form inputs we have (e.g. 2), use that as the new
        // index when inserting a new item (e.g. 2)
        $collectionHolder.data('index', $collectionHolder.find(':input').length);
        
        // count the current form inputs we have (e.g. 2), use that as the new
        // index when inserting a new item (e.g. 2)
        $variantCollectionHolder.data('index', $variantCollectionHolder.find(':input').length);

        $addSpecificationLink.on('click', function(e) {
            // prevent the link from creating a "#" on the URL
            e.preventDefault();

            // add a new tag form (see next code block)
            addSpecificationForm($collectionHolder, $newLinkLi);
        });
        
        $addVariantLink.on('click', function(e) {
            // prevent the link from creating a "#" on the URL
            e.preventDefault();

            // add a new tag form (see next code block)
            addVarientForm($variantCollectionHolder, $newLinkLi2);
        });
    });
</script>